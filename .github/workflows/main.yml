name: Python Package Using Anaconda

on:
  push:
    branches:
      - 'main'
      - 'releases/*'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Increment version
        id: version
        uses: pdodds/Bump-N-Tag-Version@master
        with:
          file_name: './VERSION'
          tag_version: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          sudo chmod -R ugo+rwX .
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          yes | mypy --install-types kodexa || true
      - name: Test with pytest
        run: |
          pytest
      - name: Package
        run: |
          python setup.py bdist_wheel sdist
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
      # The steps below are used to setup payload 
      # and triggers workflow in kodexa-playground
      - name: Prepare Workflow Client Payload
        id: workflow_payload
        run: |
          VERSION=$(cat VERSION)
          PAYLOAD=$(jq -c -n --arg version "$VERSION" '$ARGS.named')
          echo "payload=$PAYLOAD" >> $GITHUB_OUTPUT
          # Wait for 2 minute; just to make sure the package is published
          sleep 120
      - name: Trigger a build in kodexa-playground
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: kodexa-ai
          repo: kodexa-playground
          github_token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
          github_user: rcablao-kodexa
          workflow_file_name: aws.yml
          ref: main
          client_payload: ${{ steps.workflow_payload.outputs.payload }}
          wait_interval: 10
          trigger_workflow: true
          propagate_failure: false
          wait_workflow: false