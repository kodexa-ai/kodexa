name: Build and Package with Poetry

on:
  push:
    branches:
      - 'main'
      - 'releases/*'

jobs:
  build-and-publish-python-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Run Creds Scanner
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.ref_name }}
          head: HEAD
          extra_args: --debug 
      - name: Run image
        uses: abatilo/actions-poetry@v2
      - name: Increment version
        run: poetry version patch
      - uses: EndBug/add-and-commit@v9
        with:
          message: 'Update version'
          add: 'pyproject.toml'
      - name: Install dependencies
        run: poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          yes | poetry run mypy --install-types kodexa || true
      - name: Test with pytest
        run: |
          poetry run pytest
      - name: Build Package
        run: |
          poetry build
      - name: Publish a Python distribution to PyPI
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
      - name: Prepare Workflow Client Payload
        id: workflow_payload
        run: |
          VERSION=$(poetry version | awk 'END {print $NF}')
          PAYLOAD=$(jq -c -n --arg version "$VERSION" '$ARGS.named')
          echo "payload=$PAYLOAD" >> $GITHUB_OUTPUT
      - name: Trigger a build in kodexa-playground
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: kodexa-ai
          repo: kodexa-playground
          github_token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
          github_user: rcablao-kodexa
          workflow_file_name: aws.yml
          ref: main
          client_payload: ${{ steps.workflow_payload.outputs.payload }}
          wait_interval: 10
          trigger_workflow: true
          propagate_failure: false
          wait_workflow: false